openapi: 3.0.0
info:
  title: E-Commerce API
  description: API for managing e-commerce operations including user management, product management, and order processing.
  version: 1.0.0
servers:
  - url: http://localhost:8000/api
    description: Local server for development

paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        description: User registration details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  format: email
                  example: john.doe@example.com
                password:
                  type: string
                  format: password
                  example: password123
                password_confirmation:
                  type: string
                  format: password
                  example: password123
      responses:
        '200':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  email:
                    type: string
        '400':
          description: Invalid input

  /login:
    post:
      summary: Authenticate a user and obtain JWT token
      requestBody:
        description: User login credentials
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: john.doe@example.com
                password:
                  type: string
                  format: password
                  example: password123
      responses:
        '200':
          description: JWT token returned successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: your-jwt-token
        '401':
          description: Unauthorized

  /products:
    get:
      summary: List all products
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    description:
                      type: string
                    price:
                      type: number
                      format: float
                    quantity:
                      type: integer

    post:
      summary: Create a new product
      requestBody:
        description: Product details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Product Name
                description:
                  type: string
                  example: Product Description
                price:
                  type: number
                  format: float
                  example: 100.00
                quantity:
                  type: integer
                  example: 10
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  price:
                    type: number
                    format: float
                  quantity:
                    type: integer
        '400':
          description: Invalid input

  /products/{id}:
    get:
      summary: Get details of a specific product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  price:
                    type: number
                    format: float
                  quantity:
                    type: integer
        '404':
          description: Product not found

    put:
      summary: Update a specific product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Updated product details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                  format: float
                quantity:
                  type: integer
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  price:
                    type: number
                    format: float
                  quantity:
                    type: integer
        '400':
          description: Invalid input
        '404':
          description: Product not found

    delete:
      summary: Delete a specific product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Product deleted successfully
        '404':
          description: Product not found

  /orders:
    post:
      summary: Place a new order
      requestBody:
        description: Order details including products
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      quantity:
                        type: integer
      responses:
        '201':
          description: Order placed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        quantity:
                          type: integer
        '400':
          description: Invalid input
        '401':
          description: Unauthorized

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
